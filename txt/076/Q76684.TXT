DOCUMENT:Q76684  21-DEC-2001  [win16sdk]
TITLE   :SAMPLE: Wsscanf.exe Replaces sscanf in Windows DLLs
PRODUCT :Microsoft Windows Software Development Kit
PROD/VER:WINDOWS:3.0,3.1
OPER/SYS:
KEYWORDS:kbfile kbSample kb16bitonly

======================================================================
-------------------------------------------------------------------------------
The information in this article applies to:

 - Microsoft Windows Software Development Kit (SDK) versions 3.0, 3.1 
-------------------------------------------------------------------------------

SUMMARY
=======

Wsscanf.exe that can serve as a limited replacement for the Microsoft C run-
time library function sscanf, which is not compatible for use with a
dynamic-link library (DLL) for the Microsoft Windows graphical environment.

MORE INFORMATION
================

The following file is available for download from the Microsoft Download
Center:

   Wsscanf.exe

For additional information about how to download Microsoft Support files, click
the article number below to view the article in the Microsoft Knowledge Base:

   Q119591 How to Obtain Microsoft Support Files from Online Services

Microsoft used the most current virus detection software available on the date of
posting to scan this file for viruses. Once posted, the file is housed on secure
servers that prevent any unauthorized changes to the file.

The sscanf(), fprintf(), and scanf() functions are not available for Windows
DLLs.

There are two factors that cause these functions to be incompatible:

1. These functions rely on near pointers.

2. These functions expect SS == DS.

Because neither of these conditions is true when a function in a DLL uses data
from an application, these functions are not available.

The WSSCANF file in the Microsoft Download Center contains the source code to a
wsscanf() function that can serve as a limited replacement for the sscanf
function. It does not support floating point. The wsscanf() code is based on the
sscanf() source code in the Microsoft C 6.0a run-time library. The source code
has been modified to work correctly in a DLL, and requires that all parameters
are specified as FAR pointers. The following code demonstrates using the
wsscanf() function:

       char   szBuf[] = "1 3 b000:0200";
      int    nValue1, nValue2;
      LPSTR  lpPtr;

      wsscanf(szBuf, "%d %d %p", (int FAR *)&nValue1,
               (int FAR *)&nValue2, (LPSTR FAR *)&lpPtr);

NOTE: The first two parameters are not explicitly typecast in the function call.
The function prototype typecasts the first two parameters automatically;
however, the application must typecast each subsequent parameter. If the
application does not typecast each parameter, when the application calls wsscanf
an unrecoverable application error (UAE) occurs.

The wsscanf() function does not support floating point numbers (the %f, %g, and
%e format specifiers).

Additional query words:

======================================================================
Keywords          : kbfile kbSample kb16bitonly 
Technology        : kbAudDeveloper kbWin3xSearch kbSDKSearch kbWinSDKSearch kbWinSDK300 kbWinSDK310
Version           : WINDOWS:3.0,3.1

=============================================================================

THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.

Copyright Microsoft Corporation 2001.