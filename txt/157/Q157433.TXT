DOCUMENT:Q157433  27-MAR-2002  [visualc]
TITLE   :INFO: STL Sample for the basic_string size and resize Functions
PRODUCT :Microsoft C Compiler
PROD/VER::4.2,5.0,6.0
OPER/SYS:
KEYWORDS:kbcode kbtemplate kbSTL kbVC420 kbVC500 kbVC600 kbDSupport

======================================================================
-------------------------------------------------------------------------------
The information in this article applies to:

 - The Standard C++ Library, used with:
    - Microsoft Visual C++, 32-bit Enterprise Edition, versions 4.2, 5.0, 6.0 
    - Microsoft Visual C++, 32-bit Professional Edition, versions 4.2, 5.0, 6.0 
    - Microsoft Visual C++, 32-bit Learning Edition, version 6.0 
    - Microsoft Visual C++.NET (2002) 
-------------------------------------------------------------------------------

NOTE: Microsoft Visual C++ NET (2002) supported both the managed code model that is provided by the .NET Framework and the unmanaged native Windows code model. The information in this article applies to unmanaged Visual C++ code only.

SUMMARY
=======

The sample code below illustrates how to use the basic_string size() and
resize() STL function(s) in Visual C++.

MORE INFORMATION
================

Required Header
---------------

      <string>

Prototype
---------

      size_type size() const;

      void resize(size_type n, E c = E());

   resize is defined in header xstring which is included indirectly.

NOTE: The class/parameter names in the prototype may not match the version in the
header file. Some have been modified to improve readability.

Description
-----------

The size() function returns the length of the sequence.

The resize() function changes the size to the length specified by the first
parameter. If the sequence is made longer, the function appends elements with
the value of the second parameter. This value defaults to a null. The output of
the sample code shows spaces for the null characters. operator<< reads the
size of string and outputs each character in the string one at a time.

Sample Code
-----------

   ////////////////////////////////////////////////////////////////////// 
   // 
   // Compile options needed: /GX
   // 
   // <filename> :  size.cpp
   // 
   // Functions:
   // 
   //    size()
   //    resize() ; Defined in header xstring which is included indirectly.
   // 
   // Written by Linda Koontz
   // of Microsoft Product Support Services,
   // Copyright (c) 1996 Microsoft Corporation. All rights reserved.
   ////////////////////////////////////////////////////////////////////// 

   #include <iostream>
   #include <string>

   #if _MSC_VER > 1020   // if VC++ version is > 4.2
      using namespace std;  // std c++ libs implemented in std
      #endif

   void main()
   {

       string TestString = "1111122222333334444455555";
       cout << TestString << "\n  size: " << TestString.size() << endl;
       TestString.resize(5);
       cout << TestString << "\n  size: " << TestString.size() << endl;
       TestString.resize(10);
       cout << TestString << "\n  size: " << TestString.size() << endl;
       TestString.resize(15,'6');
       cout << TestString << "\n  size: " << TestString.size() << endl;

   } 

Output is:

1111122222333334444455555
  size: 25
11111
  size: 5
11111
  size: 10
11111     66666
  size: 15

REFERENCES
==========

Visual C++ Books On Line: Visual C++ Books:C/C++:Standard C++ Library Reference.

Additional query words: STL STLSample size resize

======================================================================
Keywords          : kbcode kbtemplate kbSTL kbVC420 kbVC500 kbVC600 kbDSupport 
Technology        : kbVCsearch kbAudDeveloper kbVCLibrary
Version           : :4.2,5.0,6.0
Issue type        : kbinfo

=============================================================================

THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.

Copyright Microsoft Corporation 2002.