DOCUMENT:Q180455  15-NOV-2001  [vbwin]
TITLE   :BUG: Error 451 "Object not a collection" When Using Left()
PRODUCT :Microsoft Visual Basic for Windows
PROD/VER::3.0
OPER/SYS:
KEYWORDS:kbToolkit kbVBp kbVBp500bug kbVBp600bug kbOSWinCE100 kbGrpDSVB

======================================================================
-------------------------------------------------------------------------------
The information in this article applies to:

 - Microsoft eMbedded Visual Basic, version 3.0 
 - Microsoft Windows CE Toolkit for Visual Basic 6.0 
-------------------------------------------------------------------------------

SYMPTOMS
========

If the Left Function is used in a form module, the following error occurs:

   Error 451 "Object not a collection"

CAUSE
=====

Visual Basic is misinterpreting the Left function as the Left property of the
Form.

RESOLUTION
==========

There are two possible workarounds to this problem:

1. (This is the preferred method.) Use the Mid Function with the start parameter
   equal to 1, similar to the following:

         Private Sub Form_Load()
             On Error Resume Next
             Dim sDrive
             'Use the following line instead of sDrive = Left("c:\windows", 3)
             sDrive = Mid("c:\windows", 1, 3)
             If Err.Number = 0 Then
                MsgBox "The Drive is " & sDrive, vbInformation, "Drive"
             Else
                MsgBox "Error: " & Err.Number & " - " & _
                Err.Description, vbInformation, "Error Message"
             End If
         End Sub

2. Use the Left Function in a standard module (*.bas).

STATUS
======

Microsoft has confirmed this to be a bug in the Microsoft products listed at the
beginning of this article.

MORE INFORMATION
================

Steps to Reproduce Behavior
---------------------------

1. Create a new Windows CE project in either eMbedded Visual Basic or Visual
   Basic 6.0. Form1 is created by default.

2. Add the following code to the Load Event of Form1:

         Private Sub Form_Load()
            On Error Resume Next
            Dim sDrive
            sDrive = Left("c:\windows", 3)
            If Err.Number = 0 Then
               MsgBox "The Drive is " & sDrive, vbInformation, "Drive"
            Else
               MsgBox "Error: " & Err.Number & " - " & _
               Err.Description, vbInformation, "Error Message"
            End If
         End Sub

3. Press F5 to run the project in the emulator and observe the error.

(c) Microsoft Corporation 1999, All Rights Reserved.
Contributions by Mike Dixon, Microsoft Corporation


Additional query words: wince vbce vbce6 evb

======================================================================
Keywords          : kbToolkit kbVBp kbVBp500bug kbVBp600bug kbOSWinCE100 kbGrpDSVB 
Technology        : kbVBSearch kbAudDeveloper kbZNotKeyword2 kbVBeMbSearch kbWinCETKVBSearch kbWinCESearch kbVBeMb300
Version           : :3.0
Issue type        : kbbug
Solution Type     : kbpending

=============================================================================

THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.

Copyright Microsoft Corporation 2001.