DOCUMENT:Q167113  04-MAY-2001  [visualc]
TITLE   :FIX: C2734, C2166: Caused by Template Function with const ref
PRODUCT :Microsoft C Compiler
PROD/VER:winnt:4.2,4.2b,5.0
OPER/SYS:
KEYWORDS:kbtool kbVC500bug kbVC600fix

======================================================================
-------------------------------------------------------------------------------
The information in this article applies to:

 - The C/C++ Compiler (CL.EXE), used with:
    - Microsoft Visual C++, 32-bit Enterprise Edition, version 4.2 
    - Microsoft Visual C++, 32-bit Professional Edition, version 4.2 
    - Microsoft Visual C++, 32-bit Enterprise Edition, version 4.2b 
    - Microsoft Visual C++, 32-bit Professional Edition, version 4.2b 
    - Microsoft Visual C++, 32-bit Enterprise Edition, version 5.0 
    - Microsoft Visual C++, 32-bit Professional Edition, version 5.0 
-------------------------------------------------------------------------------

SYMPTOMS
========

The compiler generates the compiler error C2734 and C2166, when compiling a
template function with a const reference of class T as an argument, where class
T is a template parameter.

   C2734: 'identifier' : const object must be initialized if not extern C2166:
   l-value specifies const object

STATUS
======

Microsoft has confirmed this to be a bug in the Microsoft products listed at the
beginning of this article. This problem was corrected in Visual C++ version 6.0
for Windows.

MORE INFORMATION
================

The following sample demonstrates the problem and the workaround.

Sample Code
-----------

       /* Compiler Options: None
       */ 
       //#define WORKAROUND1 // uncomment this line for workaround1
       //#define WORKAROUND2 // uncomment this line for workaround2

       template <class T>
       T Test (const T& arg1)

      {

       #ifndef WORKAROUND1
           T x ;
         x = arg1;
       #else
          T x = arg1 ; // WORKAROUND 1
       #endif

           return x;

      }

       int main()
      {
       #ifndef WORKAROUND2
           int testValue = Test ( 7 );
      #else
          int testValue = Test <int> ( 7 ); // WORKAROUND 2
      #endif

       return 0;
      }

Additional query words:

======================================================================
Keywords          : kbtool kbVC500bug kbVC600fix 
Technology        : kbVCsearch kbAudDeveloper kbCVCComp
Version           : winnt:4.2,4.2b,5.0
Issue type        : kbbug
Solution Type     : kbfix

=============================================================================

THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.

Copyright Microsoft Corporation 2001.