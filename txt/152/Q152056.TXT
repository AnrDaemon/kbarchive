DOCUMENT:Q152056  04-AUG-2001  [visualc]
TITLE   :BUG: Using Intrinsic Versions of log10 and fmod
PRODUCT :Microsoft C Compiler
PROD/VER::4.0,4.1,4.2,5.0
OPER/SYS:
KEYWORDS:kbCodeGen kbCompiler kbVC500bug

======================================================================
-------------------------------------------------------------------------------
The information in this article applies to:

 - Microsoft Visual C++, versions 4.0, 4.1, 4.2 
 - Microsoft Visual C++, 32-bit Enterprise Edition, version 5.0 
 - Microsoft Visual C++, 32-bit Professional Edition, version 5.0 
-------------------------------------------------------------------------------

SYMPTOMS
========

In some cases, using the intrinsic versions of log10 and fmod together in a
program may produce incorrect results. The sample code below illustrates the
problem.

When the result of log10 is a negative whole number that is divided by 1.0 using
fmod, the result of fmod will be -1.0 rather than 0.0. This only occurs when the
compiler generates the intrinsic versions of these functions. You need to use
the /Oi compiler option to have the compiler generate intrinsic versions of
functions.

RESOLUTION
==========

When using log10 and fmod together in a function, as in the sample code, do not
use the /Oi compiler option.

STATUS
======

Microsoft has confirmed this to be a bug in the Microsoft products listed at the
beginning of this article. We are researching this problem and will post new
information here in the Microsoft Knowledge Base as it becomes available.

MORE INFORMATION
================

Sample Code
-----------

      /* Compile options needed: /Oi
      */ 
      #include <math.h>
      #include <stdio.h>

      void main()
      {
          double dValue, theLog, theMod;

          dValue = 0.01;
          theLog = log10( dValue );
          theMod = fmod( theLog, 1.0 );

          printf( "The log10 of %f is %f\n", dValue, theLog );
          printf( "The fmod of (%f,1.0) is %f\n", theLog, theMod );
          printf( "for  all x, fmod(x, 1.0) should always be 0.0\n" );
      }

Additional query words: kbVC400bug

======================================================================
Keywords          : kbCodeGen kbCompiler kbVC500bug 
Technology        : kbVCsearch kbVC400 kbAudDeveloper kbVC410 kbVC420 kbVC500 kbVC32bitSearch kbVC500Search
Version           : :4.0,4.1,4.2,5.0
Issue type        : kbbug

=============================================================================

THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.

Copyright Microsoft Corporation 2001.